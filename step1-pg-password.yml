version: "3.9"

secrets:
  pg_password:
    file: ./secrets/pg_password.txt

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ghost
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
      POSTGRES_DB: ghostdb
    volumes:
      - dbdata:/var/lib/postgresql/data
    secrets:
      - pg_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ghost -d ghostdb"]
      interval: 5s
      timeout: 3s
      retries: 10

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      # Prisma - password will be replaced by entrypoint script
      DATABASE_URL: postgres://ghost:__PW__@db:5432/ghostdb?schema=public
      # App
      JWT_SECRET: "change-me-super-random"
      REGION: "CH"
      EPHEMERAL_TTL_SECONDS: "86400"
      PORT: "8080"
      # CORS: comma-separated list of allowed origins
      CORS_ORIGINS: "http://localhost:5173,https://app.nfktech.com"
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    secrets:
      - pg_password
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  web:
    build:
      context: ./client-web
      dockerfile: Dockerfile
      args:
        # IMPORTANT: point your built app at the API subdomain
        VITE_API_URL: "https://api.nfktech.com"
    expose:
      - "80"

  cloudflared:
    image: cloudflare/cloudflared:2024.8.3
    command: tunnel --no-autoupdate run --token eyJhIjoiMjc2NmRiODk1YjE3NDI5OWUyOWZjODFkNDQ0ODMyZjgiLCJ0IjoiOGFjM2QyNmQtZmQzZi00ZjNlLWEwNGEtZGM3NTM0NGE1YzU2IiwicyI6Ik16TXdOR0UzWldJdE5UUXdaaTAwTmpZd0xXRXhNRGN0WkRnNE9UVTBNRE0yTTJWbSJ9
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}
    depends_on:
      - web
      - server

volumes:
  dbdata: